import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
    // Write your code here
    
//     long n= arr.size();
//     long []a1 = new long[5];
//     for(int i=0;i<5;i++)
//     {
//         a1[i]=0;
//     }
//     for(long i=0;i<n;i++)
//     { 
//         int x=arr.get(i);
//         a1[x-1]++;
         
//     }
// int max=0;
// for(int i=0;i<5;i++)
//     {
//         System.out.println(a1[i]);
//         if(max<a1[i])
//         {
            
//             max=i+1;
            
//         }
            
         
//     }
//     return max;
 HashMap<Integer, Integer> sightings = new HashMap<Integer,Integer>();
        int sights = 0;
        int sightsID = 0;
        for (Integer i : arr) {
            if (sightings.get(i) != null) {
                sightings.put(i,sightings.get(i)+1);
                if (sightings.get(i) > sights) {
                    sights = sightings.get(i);
                    sightsID = i;
                } else if (sightings.get(i) == sights) {
                    if (sightsID > i) {
                        sightsID = i;
                    }
                }
            } else {
                sightings.put(i, 1);
            }
        }
        return sightsID;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
