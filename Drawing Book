import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pageCount' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER p
     */

    public static int pageCount(int n, int p) {
    // Write your code here
    
    int x=n/2,count=0;
      // System.out.println(x+" - "+p);
    if(p<=x)
    {
        int pg=1;
        if(p==1)
            return 0;
        while(p>pg)
        {
            pg+=2;
          //  System.out.println("1- ");
            count++;
        }
    }
    else{
        
        if(n%2==0)
        {
            int pg=n-1;
            if(n==p)
                return 0;
            pg-=1;
            count++;
            while(p<pg)
            {
                pg-=2;
                count++;
            }
        }
                else{
                    //n =odd
                     if(n-1==p || n==p)
                       return 0;
                    int pg=n-1;
                    while(p<pg)
                    {
                        pg-=2;
                        count++;
                    }
                   
                    
                  
                    
                }
                
            }
        
    
return count;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        int p = Integer.parseInt(bufferedReader.readLine().trim());

        int result = Result.pageCount(n, p);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
